<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Tips | Lee Green]]></title>
  <link href="http://lee.greens.io/blog/categories/tips/atom.xml" rel="self"/>
  <link href="http://lee.greens.io/"/>
  <updated>2014-07-30T22:37:49-05:00</updated>
  <id>http://lee.greens.io/</id>
  <author>
    <name><![CDATA[Lee Green]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Fix tar errors on OS X]]></title>
    <link href="http://lee.greens.io/blog/2014/05/06/fix-tar-errors-on-os-x/"/>
    <updated>2014-05-06T16:06:00-05:00</updated>
    <id>http://lee.greens.io/blog/2014/05/06/fix-tar-errors-on-os-x</id>
    <content type="html"><![CDATA[<p>I&rsquo;ve worked on a lot of software projects over the past 10 years, and on many of
them, developers worked on OS X (or a Linux VM, using
<a href="http://www.vagrantup.com">Vagrant</a>), while the code was deployed on Linux.
This can cause issues when extracting tar.gz files on Linux that were created on OS X.</p>

<p>If you&rsquo;ve ever seen an error like this, you know what I&rsquo;m talking about:</p>

<pre><code>tar: Ignoring unknown extended header keyword `SCHILY.dev'
tar: Ignoring unknown extended header keyword `SCHILY.ino'
tar: Ignoring unknown extended header keyword `SCHILY.nlink'
tar: Error exit delayed from previous errors
</code></pre>

<h2>What&rsquo;s going on?</h2>

<p>There are a few issues at play here:</p>

<ul>
<li>On OS X, the default tar version is BSD, whereas on Linux it is GNU.</li>
<li>OS X encodes file attributes as extended headers in tar. BSD tar supports this,
GNU tar does not.</li>
<li>Some versions of GNU tar have a bug where, when they encounter extended headers,
the exit code indicates failure &mdash; even though the files extracted just fine.</li>
</ul>


<p>When combined, these will cause problems for automated scripts or, for that
matter, anyone who cares about clean execution logs. :)</p>

<h2>How do we fix it?</h2>

<p>There are several possible solutions:</p>

<h3>Tell BSD tar not to insert the extended headers</h3>

<p>This is probably the easiest method, and can be done at least two ways:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Environment variable </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">export </span><span class="nv">COPYFILE_DISABLE</span><span class="o">=</span><span class="nb">true</span>
</span><span class='line'>tar -czf <span class="nv">$your_tar_gz</span> <span class="nv">$your_files</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Command-line argument </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>tar &amp;mdash;disable-copyfile -czf <span class="nv">$your_tar_gz</span> <span class="nv">$your_files</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h3>Use BSD tar on Linux</h3>

<p>This is not such a great option. For one, you need to make the change on your
servers, as opposed to your development machines; secondly, you then need to
keep track of which files are created with which version of tar.</p>

<h3>Use GNU tar on OS X</h3>

<p>This is my preferred option. No change to the server, and you get the assurance
that the same version of tar will be used on both ends.</p>

<p>In fact, for a long time, OS X shipped with GNU tar installed! If you&rsquo;re running
a release before Mavericks, you can stop here and just invoke <code>gnutar</code> on OS X.
This is easily scriptable:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Use GNU tar on OS X </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">OS</span><span class="o">=</span>&lt;code&gt;uname&lt;/code&gt;&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;if <span class="o">[</span> &amp;ldquo;<span class="nv">$OS</span>&amp;rdquo; <span class="o">==</span> &amp;ldquo;Darwin&amp;rdquo; <span class="o">]</span>; <span class="k">then</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;tar_bin<span class="o">=</span><span class="s1">&#39;gnutar&#39;</span>
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;else&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;tar_bin<span class="o">=</span><span class="s1">&#39;tar&#39;</span>
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;fi
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>For whatever reason, though, Apple stopped shipping GNU tar with OS X as of Mavericks.
Not a problem &mdash; we&rsquo;ll just lean on our old friend <a href="http://brew.sh">Homebrew</a>!</p>

<h2>Homebrew</h2>

<p><a href="http://brew.sh">Homebrew</a> is a command-line package manager for OS X, which
always has everything I&rsquo;m looking for. I love Homebrew, even if they do tell you
to pipe curl into Ruby (<a href="http://blog.existentialize.com/dont-pipe-to-your-shell.html">see here</a>).</p>

<p>Once you have Homebrew installed, installing GNU tar is as easy as:</p>

<pre><code>brew install gnu-tar
</code></pre>

<p>This installs GNU tar as <code>gtar</code>. If you&rsquo;d like it available as <code>gnutar</code> like on
previous versions of OS X, that&rsquo;s just one line as well:</p>

<pre><code>sudo ln -s /usr/local/opt/gnu-tar/libexec/gnubin/tar /usr/bin/gnutar
</code></pre>

<h2>Links</h2>

<p>I found the following links useful here. You might, also.</p>

<p><a href="http://superuser.com/questions/318809/linux-os-x-tar-incompatibility-tarballs-created-onos-x-give-errors-when-unt">superuser.com</a><br/>
<a href="http://xorl.wordpress.com/2012/05/15/admin-mistakes-gnu-bsd-tar-and-posix-compatibility/">xorl.wordpress.com</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Print random line(s) from a file]]></title>
    <link href="http://lee.greens.io/blog/2014/02/23/quick-tip-random-line-from-a-file/"/>
    <updated>2014-02-23T23:29:00-06:00</updated>
    <id>http://lee.greens.io/blog/2014/02/23/quick-tip-random-line-from-a-file</id>
    <content type="html"><![CDATA[<p>Occasionally, I have a need to pull a random line (or lines) from a file.</p>

<p>To make the example real, let&rsquo;s say we&rsquo;re parsing server logs, and the file contains one server name per line.
If we want to test a change to our parser, we might want to choose a random server and parse the logs for only that server.</p>

<p>shuf, from GNU textutils, makes this easy:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;!/bin/bash&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;source_file<span class="o">=</span>&amp;lsquo;our_server_list&amp;rsquo;
</span><span class='line'><span class="nv">server</span><span class="o">=</span>&lt;code&gt;shuf -n 1 <span class="nv">$source_file</span>&lt;/code&gt;
</span><span class='line'><span class="nb">echo</span> &amp;ldquo;The server we chose is: <span class="nv">$server</span>&amp;rdquo;&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;./our_parser <span class="nv">$server</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>The <code>-n</code> parameter controls the number of lines returned: in this case, 1.</p>

<p>For more info on shuf, check <a href="http://en.wikipedia.org/wiki/Shuf">Wikipedia</a> or <a href="http://linux.die.net/man/1/shuf">its man page</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Change your Octopress Favicon]]></title>
    <link href="http://lee.greens.io/blog/2014/01/18/change-your-octopress-favicon/"/>
    <updated>2014-01-18T13:17:00-06:00</updated>
    <id>http://lee.greens.io/blog/2014/01/18/change-your-octopress-favicon</id>
    <content type="html"><![CDATA[<p>It seems like every Octopress blog eventually includes a post about customizing Octopress itself.
If my <a href="/blog/2014/01/13/windows-chrome/">previous post</a> didn&rsquo;t count, this one certainly will.</p>

<p><img class="left" src="/images/octopress-favicon.png"></p>

<p>I see too many sites still running the stock Octopress favicon (pictured at left) &mdash; even sites that are otherwise completely customized!
This is one of the easiest changes you can make to customize the appearance of your site. Here&rsquo;s how to change it:</p>

<h3>Create an image file</h3>

<p>Save your preferred icon as a 32x32 (pixels) PNG file.
Historically speaking, favicons are 16x16, but High-PPI displays (&ldquo;Retina&rdquo;, in Apple&rsquo;s marketing language) are now the norm.</p>

<h3>Replace the existing one</h3>

<p>Replace the existing Octopress favicon in <code>source/favicon.png</code> with your newly created one.</p>

<h3>Test!</h3>

<p>Assuming you saw the default one before, the new one should show up without any issues.</p>

<p>If it doesn&rsquo;t, ensure your theme has a link to the favicon.
This is typically in <code>source/_includes/head.html</code>, although it may vary depending on your theme.
There should be a line that looks like this:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Favicon link </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;link</span> <span class="na">href=</span><span class="s">&quot;http://lee.greens.io/favicon.png&quot;</span> <span class="na">rel=</span><span class="s">&quot;icon&quot;</span><span class="nt">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><strong>Note:</strong> When testing, use a different browser, or a private-browsing window, to avoid cache issues.</p>
]]></content>
  </entry>
  
</feed>
